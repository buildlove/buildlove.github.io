<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>liyang&#39;s blog</title>
  <subtitle>Stay hungry,stay foolish.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://buildlove.github.io/"/>
  <updated>2016-11-09T02:13:13.000Z</updated>
  <id>http://buildlove.github.io/</id>
  
  <author>
    <name>Screenshot 2015</name>
    <email>mkdir_yang@163.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>hexo</title>
    <link href="http://buildlove.github.io/2016/11/09/hexo/"/>
    <id>http://buildlove.github.io/2016/11/09/hexo/</id>
    <published>2016-11-09T02:03:40.000Z</published>
    <updated>2016-11-09T02:13:13.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="学习链接"><a href="#学习链接" class="headerlink" title="学习链接"></a>学习链接</h2><p>Hexo官网 (右侧可以选择中文简体)<br><a href="http://hexo.io/" target="_blank" rel="external">http://hexo.io/</a></p>
<p>Hexo 入门<br><a href="http://zipperary.com/categories/hexo/" target="_blank" rel="external">http://zipperary.com/categories/hexo/</a></p>
<p>Hexo Admin<br><a href="http://jaredly.github.io/hexo-admin/" target="_blank" rel="external">http://jaredly.github.io/hexo-admin/</a></p>
<p>Hexo Theme wiki<br><a href="https://github.com/hexojs/hexo/wiki/Themes" target="_blank" rel="external">https://github.com/hexojs/hexo/wiki/Themes</a></p>
<p>Hexo 静态blog搜索<br><a href="https://swiftype.com/" target="_blank" rel="external">https://swiftype.com/</a></p>
<p>Hexo 插件<br><a href="http://hexo.io/plugins/" target="_blank" rel="external">http://hexo.io/plugins/</a></p>
<p>Hexo 插件wiki<br><a href="https://github.com/hexojs/hexo-generator-feed" target="_blank" rel="external">https://github.com/hexojs/hexo-generator-feed</a></p>
<h2 id="常见错误"><a href="#常见错误" class="headerlink" title="常见错误"></a>常见错误</h2><h3 id="git-deploy上传时提示仓库不存在"><a href="#git-deploy上传时提示仓库不存在" class="headerlink" title="git deploy上传时提示仓库不存在"></a>git deploy上传时提示仓库不存在</h3><pre><code>删除主目录下的.deploy_git文件
</code></pre><h3 id="Error-Cannot-find-module-‘-build-Release-DTraceProviderBindings’"><a href="#Error-Cannot-find-module-‘-build-Release-DTraceProviderBindings’" class="headerlink" title="Error: Cannot find module ‘./build/Release/DTraceProviderBindings’"></a>Error: Cannot find module ‘./build/Release/DTraceProviderBindings’</h3><pre><code>错误下面有dtrace-provider.js:17:23这一行，也就是这个文件的位置
编辑这个文件/Users/liqi/Dropbox/programs/nodejs/buildlove.github.io/node_modules/.0.7.1@dtrace-provider/dtrace-provider.js直接注释掉
</code></pre><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">// var builds = [&apos;Release&apos;, &apos;default&apos;, &apos;Debug&apos;];</div><div class="line"></div><div class="line">// for (var i in builds) &#123;</div><div class="line">//     try &#123;</div><div class="line">//         var binding = require(&apos;./build/&apos; + builds[i] + &apos;/DTraceProviderBindings&apos;);</div><div class="line">//         DTraceProvider = binding.DTraceProvider;</div><div class="line">//         break;</div><div class="line">//     &#125; catch (e) &#123;</div><div class="line">//         // if the platform looks like it _should_ have DTrace</div><div class="line">//         // available, log a failure to load the bindings.</div><div class="line">//         if (process.platform == &apos;darwin&apos; ||</div><div class="line">//             process.platform == &apos;sunos&apos; ||</div><div class="line">//             process.platform == &apos;freebsd&apos;) &#123;</div><div class="line">//             console.error(e);</div><div class="line">//         &#125;</div><div class="line">//     &#125;</div><div class="line">// &#125;</div></pre></td></tr></table></figure>
<h2 id="操作命令行"><a href="#操作命令行" class="headerlink" title="操作命令行"></a>操作命令行</h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">hexo new &quot;postName&quot; #新建文章</div><div class="line">hexo new page &quot;pageName&quot; #新建页面</div><div class="line">hexo generate #生成静态页面至public目录</div><div class="line">hexo server #开启预览访问端口（默认端口4000，&apos;ctrl + c&apos;关闭server）</div><div class="line">hexo deploy #将.deploy目录部署到GitHub</div><div class="line">hexo deploy -g</div><div class="line">hexo server -g</div><div class="line">hexo n == hexo new</div><div class="line">hexo g == hexo generate</div><div class="line">hexo s == hexo server</div><div class="line">hexo d == hexo deploy</div></pre></td></tr></table></figure>
<h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line"># Hexo Configuration</div><div class="line">## Docs: http://hexo.io/docs/configuration.html</div><div class="line">## Source: https://github.com/hexojs/hexo/</div><div class="line"></div><div class="line"># Site</div><div class="line">title: Screenshot 2015</div><div class="line">subtitle: Stay hungry,stay foolish.</div><div class="line">description: &apos;whatever&apos;</div><div class="line">author: Screenshot 2015</div><div class="line">language: chinese</div><div class="line">email: mkdir_yang@163.com</div><div class="line">language: zh-CN</div><div class="line"># language: zh-Hans</div><div class="line"></div><div class="line"># URL</div><div class="line">## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos;</div><div class="line">url: http://buildlove.github.io</div><div class="line">root: /</div><div class="line">permalink: :year/:month/:day/:title/</div><div class="line">permalink_defaults:</div><div class="line">tag_dir: tags</div><div class="line">archive_dir: archives</div><div class="line">category_dir: categories</div><div class="line">code_dir: downloads/code</div><div class="line"></div><div class="line"># Directory</div><div class="line">source_dir: source</div><div class="line">public_dir: public</div><div class="line">i18n_dir: :lang</div><div class="line">skip_render:</div><div class="line"></div><div class="line"># Writing</div><div class="line">new_post_name: :title.md # File name of new posts</div><div class="line">default_layout: post</div><div class="line">titlecase: false # Transform title into titlecase</div><div class="line">external_link: true # Open external links in new tab</div><div class="line">max_open_file: 100</div><div class="line">multi_thread: true</div><div class="line">filename_case: 0</div><div class="line">render_drafts: false</div><div class="line">post_asset_folder: false</div><div class="line">relative_link: false</div><div class="line">future: true</div><div class="line">highlight:</div><div class="line">  enable: true</div><div class="line">  line_number: false</div><div class="line">  # auto_detect: false</div><div class="line">  tab_replace:</div><div class="line"></div><div class="line"># Category &amp; Tag</div><div class="line">default_category: uncategorized</div><div class="line">category_map:</div><div class="line">tag_map:</div><div class="line"></div><div class="line"># Archives #存档，这里的说明好像不对。全部选择1，这个选项与主题中的选项有时候会有冲突</div><div class="line">## 2: Enable pagination</div><div class="line">## 1: Disable pagination</div><div class="line">## 0: Fully Disable</div><div class="line">archive: 1</div><div class="line">category: 1</div><div class="line">tag: 1</div><div class="line"></div><div class="line"># Server 本地服务参数</div><div class="line">## Hexo uses Connect as a server</div><div class="line">## You can customize the logger format as defined in</div><div class="line">## http://www.senchalabs.org/connect/logger.html</div><div class="line">port: 4001</div><div class="line">logger: true</div><div class="line">logger_format:</div><div class="line"></div><div class="line"># Date / Time format 日期显示格式</div><div class="line">## Hexo uses Moment.js to parse and display date</div><div class="line">## You can customize the date format as defined in</div><div class="line">## http://momentjs.com/docs/#/displaying/format/</div><div class="line">date_format: YYYY-MM-DD</div><div class="line"># date_format: MMM D YYYY</div><div class="line"># time_format: HH:mm:ss</div><div class="line">time_format: H:mm:ss</div><div class="line"></div><div class="line"># Pagination 分页设置</div><div class="line">## Set per_page to 0 to disable pagination</div><div class="line">per_page: 10</div><div class="line">pagination_dir: page</div><div class="line"></div><div class="line"># Disqus #社会化评论disqus，我使用多说，在主题中配置</div><div class="line">disqus_shortname:</div><div class="line"></div><div class="line"># Extensions 插件</div><div class="line"># Plugins: http://hexo.io/plugins/</div><div class="line"># plugins: 最新版hexo注释掉不报错</div><div class="line">#  - hexo-generator-feed</div><div class="line">#  - hexo-generator-sitemap</div><div class="line"># Themes: http://hexo.io/themes/</div><div class="line">theme: pacman</div><div class="line"># theme: next</div><div class="line"></div><div class="line"># Deployment 部署</div><div class="line">## Docs: http://hexo.io/docs/deployment.html</div><div class="line">deploy:</div><div class="line">  type: git</div><div class="line">  # repository: https://github.com/buildlove/buildlove.github.io.git</div><div class="line">  repo: https://github.com/buildlove/buildlove.github.io.git</div><div class="line">  # repository: git@github.com:buildlove/buildlove.github.io.git</div><div class="line">  # branch: gh-pages</div><div class="line">  branch: master</div><div class="line"></div><div class="line"># Others</div><div class="line">index_generator:</div><div class="line">  per_page: 5 ##首页默认10篇文章标题 如果值为0不分页</div><div class="line"></div><div class="line">archive_generator:</div><div class="line">  per_page: 0 ##归档页面默认10篇文章标题</div><div class="line">  yearly: true  ##生成年视图</div><div class="line">  monthly: true ##生成月视图</div><div class="line"></div><div class="line">tag_generator:</div><div class="line">  per_page: 0 ##标签分类页面默认10篇文章</div><div class="line"></div><div class="line">category_generator:</div><div class="line">  per_page: 0 ###分类页面默认10篇文章</div><div class="line"></div><div class="line">// rss: /atom.xml 最新版注释掉也能用</div><div class="line"></div><div class="line">sitemap:</div><div class="line">  path: sitemap.xml</div><div class="line"></div><div class="line">#sitemap</div><div class="line">baidusitemap:</div><div class="line">  path: baidusitemap.xm</div><div class="line"></div><div class="line">swift_search:</div><div class="line">  enable: true</div></pre></td></tr></table></figure>
<p>##目录结构</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">.</div><div class="line">├── .deploy</div><div class="line">├── public</div><div class="line">├── scaffolds</div><div class="line">├── scripts</div><div class="line">├── source</div><div class="line">|   ├── _drafts</div><div class="line">|   └── _posts</div><div class="line">├── themes</div><div class="line">├── _config.yml</div><div class="line">└── package.json</div><div class="line">└── package.json</div><div class="line">.deploy：执行hexo deploy命令部署到GitHub上的内容目录</div><div class="line">public：执行hexo generate命令，输出的静态网页内容目录</div><div class="line">scaffolds：layout模板文件目录，其中的md文件可以添加编辑</div><div class="line">scripts：扩展脚本目录，这里可以自定义一些javascript脚本</div><div class="line">source：文章源码目录，该目录下的markdown和html文件均会被hexo处理。该页面对应repo的根目录，404文件、favicon.ico文件，CNAME文件等都应该放这里，该目录下可新建页面目录。</div><div class="line">_drafts：草稿文章</div><div class="line">_posts：发布文章</div><div class="line">themes：主题文件目录</div><div class="line">_config.yml：全局配置文件，大多数的设置都在这里</div><div class="line">package.json：应用程序数据，指明hexo的版本等信息，类似于一般软件中的关于按钮</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      用于个人笔记
    
    </summary>
    
      <category term="hexo学习配置" scheme="http://buildlove.github.io/categories/hexo%E5%AD%A6%E4%B9%A0%E9%85%8D%E7%BD%AE/"/>
    
    
      <category term="hexo" scheme="http://buildlove.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>centos上配置mongodb</title>
    <link href="http://buildlove.github.io/2016/10/13/mongoose/"/>
    <id>http://buildlove.github.io/2016/10/13/mongoose/</id>
    <published>2016-10-13T09:02:12.000Z</published>
    <updated>2016-10-13T09:15:55.000Z</updated>
    
    <content type="html"><![CDATA[<p>主要目录文件所在位置<br>path: /usr/local/mongodb<br>mongod.lock: 根目录/data/db/mongod.lock<br>logpath=/usr/local/mongodb/logs/mongodb.log<br>/data/db: 根目录/data/db<br>配置文件：/usr/local/mongodb/bin/mongodb.conf</p>
<h2 id="下载安装包-解压-移动到-usr-local目录下并改名"><a href="#下载安装包-解压-移动到-usr-local目录下并改名" class="headerlink" title="下载安装包-解压-移动到/usr/local目录下并改名"></a>下载安装包-解压-移动到/usr/local目录下并改名</h2><p>wget <a href="https://fastdl.mongodb.org/linux/mongodb-linux-i686-3.0.2.tgz" target="_blank" rel="external">https://fastdl.mongodb.org/linux/mongodb-linux-i686-3.0.2.tgz</a><br>gzip -d mongodb-linux-i686-3.0.2.tgz<br>tar xvf mongodb-linux-i686-3.0.2.tar<br>mv mongodb-linux-i686-3.0.2 /usr/local/mongodb<br>cd /usr/local/mongodb<br>mkdir db<br>mkdir logs<br>cd bin<br>vi mongodb.conf</p>
<h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><p>vi /usr/local/mongodb/mongodb.conf:dbpath=/usr/local/mongodb/db<br>写入以下配置项<br>logpath=/usr/local/mongodb/logs/mongodb.log<br>port=27017<br>fork=true<br>nohttpinterface=true</p>
<h2 id="开机自动启动mongodb"><a href="#开机自动启动mongodb" class="headerlink" title="开机自动启动mongodb"></a>开机自动启动mongodb</h2><p>vi /etc/rc.d/rc.local<br>/usr/local/mongodb/bin/mongod –config /usr/local/mongodb/bin/mongodb.conf</p>
<h2 id="重启一下系统测试下能不能自启"><a href="#重启一下系统测试下能不能自启" class="headerlink" title="重启一下系统测试下能不能自启"></a>重启一下系统测试下能不能自启</h2><p>进入mongodb的shell模式<br>/usr/local/mongodb/bin/mongod<br>查看数据库列表<br>show dbs<br>当前db版本<br>db.version();</p>
<h2 id="建立软链接"><a href="#建立软链接" class="headerlink" title="建立软链接"></a>建立软链接</h2><p>ln -s /usr/local/mongodb/bin/mongod /usr/bin<br>ln -s /usr/local/mongodb/bin/mongo /usr/bin</p>
<h2 id="后台启动或关闭"><a href="#后台启动或关闭" class="headerlink" title="后台启动或关闭"></a>后台启动或关闭</h2><p>启动（必须带着–logpath）<br>mongod –fork –logpath=/usr/local/mongodb/logs/mongodb.log<br>(如果报错child process failed -&gt;&gt; rm -rf /data/db/mongod.lock)</p>
<p>关闭后台<br>mongo<br>use admin<br>db.shutdownServer()</p>
<h2 id="远程连接mongodb"><a href="#远程连接mongodb" class="headerlink" title="远程连接mongodb"></a>远程连接mongodb</h2><p>mongo （IP地址）/test -utest -ptest<br>没有用户名和密码验证的话，直接使用：<br>mongo （IP地址）/test</p>
]]></content>
    
    <summary type="html">
    
      用于个人笔记
    
    </summary>
    
      <category term="database" scheme="http://buildlove.github.io/categories/database/"/>
    
    
      <category term="database" scheme="http://buildlove.github.io/tags/database/"/>
    
  </entry>
  
  <entry>
    <title>配置git_diftool工具</title>
    <link href="http://buildlove.github.io/2016/10/08/git-difftool/"/>
    <id>http://buildlove.github.io/2016/10/08/git-difftool/</id>
    <published>2016-10-08T09:09:53.000Z</published>
    <updated>2016-10-17T09:00:50.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="首先下载Beyond-Compare"><a href="#首先下载Beyond-Compare" class="headerlink" title="首先下载Beyond Compare"></a>首先下载Beyond Compare</h2><p>windows: <a href="http://www.scootersoftware.com/BCompare-4.1.9.21719.exe" target="_blank" rel="external">http://www.scootersoftware.com/BCompare-4.1.9.21719.exe</a><br>mac: <a href="http://www.scootersoftware.com/BCompareOSX-4.1.9.21719.zip" target="_blank" rel="external">http://www.scootersoftware.com/BCompareOSX-4.1.9.21719.zip</a><br>rm -rf “/Users/$(whoami)/Library/Application Support/Beyond Compare/registry.dat”</p>
<h2 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h2><p>找到git配置文件路径</p>
<p>windows: C:\Users\liqi.gitconfig<br>mac: ~/.gitconfig</p>
<p>在文件中添加以下代码,需要找到自己的Beyond Compare 4安装路径</p>
<p>window</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">[diff]</div><div class="line">tool = bc4</div><div class="line">[difftool]</div><div class="line">prompt = false</div><div class="line">[difftool &quot;bc4&quot;]</div><div class="line">cmd = &quot;\&quot;C:\\Program Files\\Beyond Compare 4/bcomp.exe\&quot; \&quot;$LOCAL\&quot; \&quot;$REMOTE\&quot;&quot;</div><div class="line">[merge]</div><div class="line">tool = bc</div><div class="line">[mergetool]</div><div class="line">prompt = false</div><div class="line">[mergetool &quot;bc4&quot;]</div><div class="line">cmd = &quot;\&quot;C:\\Program Files\\Beyond Compare 4/bcomp.exe\&quot; \&quot;$LOCAL\&quot; \&quot;$REMOTE\&quot; \&quot;$BASE\&quot; \&quot;$MERGED\&quot;&quot;</div></pre></td></tr></table></figure>
<p>mac</p>
<p>设置为全局变量sudo ln -s /Applications/Beyond/ Compare.app/Contents/MacOS/bcomp /usr/local/bin<br><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">[diff]</div><div class="line">  tool = bcomp</div><div class="line">[difftool]</div><div class="line">  prompt = false</div><div class="line">[difftool &quot;bcomp&quot;]</div><div class="line">  trustExitCode = true</div><div class="line">  cmd = &quot;/usr/local/bin/bcomp&quot; \&quot;$LOCAL\&quot; \&quot;$REMOTE\&quot;</div><div class="line">[merge]</div><div class="line">  tool = bcomp</div><div class="line">[mergetool]</div><div class="line">  prompt = false</div><div class="line">[mergetool &quot;bcomp&quot;]</div><div class="line">  trustExitCode = true</div><div class="line">  cmd = &quot;/usr/local/bin/bcomp&quot; \&quot;$LOCAL\&quot; \&quot;$REMOTE\&quot; \&quot;$BASE\&quot; \&quot;$MERGED\&quot;</div></pre></td></tr></table></figure></p>
<h2 id="命令行输入git-difftool"><a href="#命令行输入git-difftool" class="headerlink" title="命令行输入git difftool"></a>命令行输入git difftool</h2><p>比对当前文件相对于Head版本的改动<br>git difftool <file_name><br>跳出对面界面则配置成功</file_name></p>
]]></content>
    
    <summary type="html">
    
      用于个人笔记
    
    </summary>
    
      <category term="git difftool(Beyond Compare)" scheme="http://buildlove.github.io/categories/git-difftool-Beyond-Compare/"/>
    
    
      <category term="git" scheme="http://buildlove.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>database</title>
    <link href="http://buildlove.github.io/2016/08/24/database/"/>
    <id>http://buildlove.github.io/2016/08/24/database/</id>
    <published>2016-08-24T10:23:57.000Z</published>
    <updated>2016-10-13T09:44:24.000Z</updated>
    
    <content type="html"><![CDATA[<p>#mac内默认全局变量文件<br>etc/paths</p>
<h1 id="mongodb"><a href="#mongodb" class="headerlink" title="mongodb"></a>mongodb</h1><h2 id="安装mongodb"><a href="#安装mongodb" class="headerlink" title="安装mongodb"></a>安装mongodb</h2><p>brew install mongodb<br>brew uninstall mongodb</p>
<h2 id="mongodb启动命令"><a href="#mongodb启动命令" class="headerlink" title="mongodb启动命令"></a>mongodb启动命令</h2><p>sudo su mongod –config /usr/local/etc/mongod.conf<br>另一个命令行使用 mongo</p>
<p>#图形化mongo软件<br>Robomongo</p>
<h1 id="mysql"><a href="#mysql" class="headerlink" title="mysql"></a>mysql</h1><h2 id="初始化mysql密码"><a href="#初始化mysql密码" class="headerlink" title="初始化mysql密码"></a>初始化mysql密码</h2><p>PATH=”$PATH”:/usr/local/mysql/bin<br>cd usr/local/mysql/bin<br>sudo su</p>
<h2 id="跳过mysql验证"><a href="#跳过mysql验证" class="headerlink" title="跳过mysql验证"></a>跳过mysql验证</h2><p>./mysqld_safe –skip-grant-tables</p>
<h2 id="打开mysql，修改密码"><a href="#打开mysql，修改密码" class="headerlink" title="打开mysql，修改密码"></a>打开mysql，修改密码</h2><p>./mysql<br>FLUSH PRIVILEGES;<br>SET PASSWORD FOR ‘root’@’localhost’ = PASSWORD(‘你的新密码’);</p>
<h2 id="使用账号密码登陆"><a href="#使用账号密码登陆" class="headerlink" title="使用账号密码登陆"></a>使用账号密码登陆</h2><p>mysql -u root -p(“你的密码”)</p>
<h2 id="图形化mysql软件"><a href="#图形化mysql软件" class="headerlink" title="图形化mysql软件"></a>图形化mysql软件</h2><p>MySQLWorkbench</p>
]]></content>
    
    <summary type="html">
    
      用于个人笔记
    
    </summary>
    
      <category term="数据库" scheme="http://buildlove.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="database" scheme="http://buildlove.github.io/tags/database/"/>
    
  </entry>
  
  <entry>
    <title>node&amp;npm命令行参数和插件</title>
    <link href="http://buildlove.github.io/2016/07/22/npm/"/>
    <id>http://buildlove.github.io/2016/07/22/npm/</id>
    <published>2016-07-22T04:00:04.000Z</published>
    <updated>2016-07-22T04:11:32.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="npm命令行参数"><a href="#npm命令行参数" class="headerlink" title="npm命令行参数"></a>npm命令行参数</h2><p>全局环境默认路径： “C:\Users\liyang\AppData\Roaming\npm\node_modules” and “/usr/local/lib/node_modules”</p>
<p>npm -v                                               #查看npm安装的版本<br>npm install <name> -g                                #将包安装到全局环境中<br>npm install <name> –save                            #安装模块,加上–save写入目录下package.json内模块依赖<br>npm install git://github.com/package/path.git        #安装github路径上的包<br>npm install git://github.com/package/path.git#0.1.0  #安装github路径上版本的包<br>npm install path/to/somedir                          #安装本地路径包(前提是本地路径里面包含一个完整的包)<br>npm list –depth 0                                   #列出所有当前文件夹安装包<br>npm list -g –depth 0                                #列出npm所有全局安装包<br>npm outdated                                         #列出所有已经过时的包<br>npm update <modulename>                              #更新node模块<br>npm uninstall <moudlename> –save                    #卸载node模块,加–save删除目录下package.json内模块依赖<br>npm view <moudlename> dependencies                   #查看包的依赖关系<br>npm view <modulename> repository.url                 #查看包的源文件地址<br>npm init                                             #创建一个package.json文件<br>npm root                                             #查看当前包的安装路径<br>npm root -g                                          #查看全局的包的安装路径<br>npm help json                                        #打开package.json文档<br>npm help npm                                         #打开npm文档<br>npm install npm -g                                   #npm命令来升级npm<br>npm cache clear                                      #清空NPM本地缓存<br>npm config set prefix “c:\nodejs”                    #设置全局安装默认路径<br>npm config set proxy=<a href="http://127.0.0.1:8087" target="_blank" rel="external">http://127.0.0.1:8087</a>           #proxy – 代理<br>npm config set https_proxy=<a href="http://127.0.0.1:8087" target="_blank" rel="external">http://127.0.0.1:8087</a>     #https_proxy – https代理<br>npm config set registry “<a href="http://r.cnpmjs.org/" target="_blank" rel="external">http://r.cnpmjs.org/</a>“       #网速不好，使用代理下载国内源</modulename></moudlename></moudlename></modulename></name></name></p>
<h2 id="node常用接口"><a href="#node常用接口" class="headerlink" title="node常用接口"></a>node常用接口</h2><h3 id="process文档"><a href="#process文档" class="headerlink" title="process文档"></a>process<a href="http://www.css88.com/archives/4548" target="_blank" rel="external">文档</a></h3><p>process.pid：当前进程的进程号。<br>process.version：Node的版本，比如v0.10.18。<br>process.platform：当前系统平台，比如Linux。<br>process.title：默认值为“node”，可以自定义该值。<br>process.argv：当前进程的命令行参数数组。<br>process.env：指向当前shell的环境变量，比如process.env.HOME。<br>process.execPath：运行当前进程的可执行文件的绝对路径。<br>process.stdout：指向标准输出。<br>process.stdin：指向标准输入。<br>process.stderr：指向标准错误。<br>process.exit()：退出当前进程。<br>process.cwd()：返回运行当前脚本的工作目录的路径。_<br>process.chdir()：改变工作目录。<br>process.nextTick()：将一个回调函数放在下次事件循环的顶部。</p>
<h3 id="yargs文档"><a href="#yargs文档" class="headerlink" title="yargs文档"></a>yargs<a href="http://www.ruanyifeng.com/blog/2015/05/command-line-with-node.html" target="_blank" rel="external">文档</a></h3><p>设置node命令行参数插件</p>
<h2 id="Package-json-属性说明"><a href="#Package-json-属性说明" class="headerlink" title="Package.json 属性说明"></a>Package.json 属性说明</h2><p>name               #包名。<br>version            #包的版本号。<br>description        #包的描述。<br>homepage           #包的官网 url 。<br>author             #包的作者姓名。<br>contributors       #包的其他贡献者姓名。<br>dependencies       #依赖包列表。如果依赖包没有安装则自动安装<br>repository         #包代码存放的地方的类型可在Github上。<br>main               #模块ID<br>keywords           #关键字</p>
<h2 id="node-REPL-命令"><a href="#node-REPL-命令" class="headerlink" title="node-REPL 命令"></a>node-REPL 命令</h2><p>ctrl + c - 退出当前终端。<br>ctrl + c 按下两次 - 退出 Node REPL。<br>ctrl + d - 退出 Node REPL.<br>向上/向下 键 - 查看输入的历史命令<br>tab 键 - 列出当前命令<br>.help - 列出使用命令<br>.break - 退出多行表达式<br>.clear - 退出多行表达式<br>.save filename - 保存当前的 Node REPL 会话到指定文件<br>.load filename - 载入当前 Node REPL 会话的文件内容。</p>
]]></content>
    
    <summary type="html">
    
      用于个人笔记
    
    </summary>
    
      <category term="node&amp;npm命令行参数和插件" scheme="http://buildlove.github.io/categories/node-npm%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%8F%82%E6%95%B0%E5%92%8C%E6%8F%92%E4%BB%B6/"/>
    
    
      <category term="npm" scheme="http://buildlove.github.io/tags/npm/"/>
    
      <category term="node" scheme="http://buildlove.github.io/tags/node/"/>
    
  </entry>
  
  <entry>
    <title>python2.7更新到3.4下载pip报错</title>
    <link href="http://buildlove.github.io/2016/03/24/mac-python/"/>
    <id>http://buildlove.github.io/2016/03/24/mac-python/</id>
    <published>2016-03-24T08:39:14.000Z</published>
    <updated>2016-04-12T07:21:34.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一切要从这篇文章说起"><a href="#一切要从这篇文章说起" class="headerlink" title="一切要从这篇文章说起"></a>一切要从这篇文章说起</h2><blockquote>
<p><a href="http://jingyan.baidu.com/article/27fa7326e4809646f8271fc7.html" target="_blank" rel="external">更新mac自带的python2.7到3.4版本</a>: <a href="http://jingyan.baidu.com/article/27fa7326e4809646f8271fc7.html" target="_blank" rel="external">http://jingyan.baidu.com/article/27fa7326e4809646f8271fc7.html</a></p>
</blockquote>
<p>mac顺利的从python2.7到了3.4, 问题来了<br>sudo pip install pillow<br>安装PIL时报错<br><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">File &quot;/usr/bin/easy_install&quot;, line 31</div><div class="line">continue</div><div class="line">^</div><div class="line">TabError: inconsistent use of tabs and spaces in indentation</div></pre></td></tr></table></figure></p>
<p>(site-packages里面放的是第三方库)冷静下来，首先看一下是否存在<br>/System/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages<br>这个文件夹如果存在：  </p>
<p>python /System/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/pip  </p>
<p>成功打印不报错，这里其实已经解决了, 只不过每次打印比较麻烦, 建立软链接到“全局变量”  </p>
<p>sudo ln -s /System/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/pip pip<br>python pip install pillow<br>注意：<br><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">每次pip都要到根目录下</div><div class="line">cd /</div><div class="line">然后才能python pip install</div></pre></td></tr></table></figure></p>
<p>200OK===开心玩耍  </p>
<p>如果不存在（下面很可能是我做的多余的步骤）<br>curl -O <a href="https://svn.apache.org/repos/asf/oodt/tools/oodtsite.publisher/trunk/distribute_setup.py" target="_blank" rel="external">https://svn.apache.org/repos/asf/oodt/tools/oodtsite.publisher/trunk/distribute_setup.py</a><br>sudo python distribute_setup.py<br>sudo rm distribute_setup.py  </p>
<p>和上面一样使用命令行进入<br>cd /System/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages<br>python pip install pillow  </p>
<p>python /System/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/pip<br>建立软链接到“全局变量”<br>ln -s /System/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/pip pip<br>python pip install pillow  </p>
<h2 id="首先不建议更换内置的python2-7-更换之后会导致很多不必要的折腾"><a href="#首先不建议更换内置的python2-7-更换之后会导致很多不必要的折腾" class="headerlink" title="首先不建议更换内置的python2.7, 更换之后会导致很多不必要的折腾"></a>首先不建议更换内置的python2.7, 更换之后会导致很多不必要的折腾</h2><p>如果需要python3以上版本的， 在官网上下载安装一般情况下<br>python3 -v 查看或使用<br>如不成功$PATH看是否存在在全局变量当中<br>export PATH=$PATH:/usr/local/mysql/bin  加入路径进全局变量<br>export PATH=”/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/Users/user/.local/bin“替换所有全局变量  </p>
]]></content>
    
    <summary type="html">
    
      用于个人笔记
    
    </summary>
    
      <category term="python" scheme="http://buildlove.github.io/categories/python/"/>
    
    
      <category term="python" scheme="http://buildlove.github.io/tags/python/"/>
    
      <category term="mac" scheme="http://buildlove.github.io/tags/mac/"/>
    
  </entry>
  
  <entry>
    <title>简单的python连接mysql</title>
    <link href="http://buildlove.github.io/2016/03/08/python/"/>
    <id>http://buildlove.github.io/2016/03/08/python/</id>
    <published>2016-03-08T06:27:06.000Z</published>
    <updated>2016-10-13T09:50:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>环境 win7 python3.4</p>
<h2 id="安装virtualenv"><a href="#安装virtualenv" class="headerlink" title="安装virtualenv"></a>安装virtualenv</h2><p>pip install virtualenv<br>创建一个目录，命令行进入目录<br>virtualenv –no-site-packages venv<br>进入venv虚拟环境<br>找到../venv/Scripts/activate这个文件<br>直接拖放到命令行小黑框内回车或者绝对路径复制粘贴到命令行回车<br>(venv) C:\Users\liyang\Desktop\github1\python\myproject&gt;<br>命令行前出现venv的就说明进入另一个独立的python环境</p>
<h2 id="安装mysql"><a href="#安装mysql" class="headerlink" title="安装mysql"></a>安装mysql</h2><p>windows系统下需要安装PyMySQL连接数据库<br>pip install PyMySQL<br>安装之后在”\myproject\venv\Lib\site-packages\pymysql__init__.py”文件夹写入<br>import pymysql<br>在myproject文件夹下创建一个item.py文件，写入：</p>
<p>import pymysql<br>conn = pymysql.connect(host=’127.0.0.1’, port=3306, user=’root’, passwd=’123456’, db=’mysql’)<br>cursor = conn.cursor()</p>
<p>#创建user表<br>cursor.execute(‘create table aaa (id varchar(20) primary key, name varchar(20))’)</p>
<p>#插入一行记录， 注意MYSQL的占位符是%s<br>cursor.execute(‘insert into aaa (id, name) values (%s, %s)’, [‘3’, ‘uncle’])</p>
<p>#提交<br>conn.commit()<br>cursor.execute(‘select * from aaa where id = %s’, [‘3’])<br>values = cursor.fetchall()<br>print(values)</p>
<p>#删除表<br>cursor.execute(“DROP TABLE IF EXISTS aaa”)</p>
<p>#关闭Cursor和connection<br>cursor.close()<br>conn.close()</p>
<p>python item.py<br>//((‘3’, ‘uncle’),)<br>不报错说明已经成功了</p>
<h2 id="普通连接数据库的方法"><a href="#普通连接数据库的方法" class="headerlink" title="普通连接数据库的方法"></a>普通连接数据库的方法</h2><h3 id="启动数据库mysqld-exe-–console"><a href="#启动数据库mysqld-exe-–console" class="headerlink" title="启动数据库mysqld.exe –console"></a>启动数据库mysqld.exe –console</h3><p>打开另一个cmd窗口mysql -u root -p输入账号密码</p>
<h3 id="创建数据库test"><a href="#创建数据库test" class="headerlink" title="创建数据库test"></a>创建数据库test</h3><p>创建表tbTest<br>create database test;<br>use test;<br>create table tbTest<br>(<br>  first_name varchar(255),<br>  last_name varchar(255),<br>  age int,<br>  sex varchar(255),<br>  income varchar(255)<br>);<br>查看内容<br>show databases;<br>show columns from tbTest;</p>
<h2 id="普通连接数据库实现增删改查"><a href="#普通连接数据库实现增删改查" class="headerlink" title="普通连接数据库实现增删改查"></a>普通连接数据库实现增删改查</h2><p>!/usr/bin/python<br> -<em>- coding: UTF-8 -</em>-</p>
<h3 id="引用数据库模块"><a href="#引用数据库模块" class="headerlink" title="引用数据库模块"></a>引用数据库模块</h3><p>import MySQLdb</p>
<h3 id="打开数据库连接-账号-密码-数据库名称"><a href="#打开数据库连接-账号-密码-数据库名称" class="headerlink" title="打开数据库连接                  账号   密码    数据库名称"></a>打开数据库连接                  账号   密码    数据库名称</h3><p>db = MySQLdb.connect(“localhost”,”root”,”123456”,”test” )</p>
<h3 id="使用cursor-方法获取操作游标"><a href="#使用cursor-方法获取操作游标" class="headerlink" title="使用cursor()方法获取操作游标"></a>使用cursor()方法获取操作游标</h3><p>cursor = db.cursor()</p>
<h3 id="删（删除已经创建好的表tbTest）"><a href="#删（删除已经创建好的表tbTest）" class="headerlink" title="删（删除已经创建好的表tbTest）"></a>删（删除已经创建好的表tbTest）</h3><p>cursor.execute(“DROP TABLE IF EXISTS tbTest”)</p>
<h3 id="增-创建数据表SQL语句"><a href="#增-创建数据表SQL语句" class="headerlink" title="增(创建数据表SQL语句)"></a>增(创建数据表SQL语句)</h3><p>sql = “””CREATE TABLE tbTest (<br>         FIRST_NAME  CHAR(20) NOT NULL,<br>         LAST_NAME  CHAR(20),<br>         AGE INT,<br>         SEX CHAR(1),<br>         INCOME FLOAT )”””<br>cursor.execute(sql)</p>
<h3 id="改（在表中插入数据）"><a href="#改（在表中插入数据）" class="headerlink" title="改（在表中插入数据）"></a>改（在表中插入数据）</h3><p>sql = “””INSERT INTO tbTest(FIRST_NAME,<br>         LAST_NAME, AGE, SEX, INCOME)<br>         VALUES (‘Mac’, ‘Mohan’, 20, ‘M’, 2000)”””<br>try:<br>  cursor.execute(sql)<br>  db.commit()<br>except:<br>  db.rollback()</p>
<h3 id="查-获取一条数据库打印。"><a href="#查-获取一条数据库打印。" class="headerlink" title="查 获取一条数据库打印。"></a>查 获取一条数据库打印。</h3><p>data = cursor.fetchone()<br>print “Database version : %s “ % data</p>
]]></content>
    
    <summary type="html">
    
      用于个人笔记
    
    </summary>
    
    
      <category term="python" scheme="http://buildlove.github.io/tags/python/"/>
    
      <category term="mysql" scheme="http://buildlove.github.io/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>javascript</title>
    <link href="http://buildlove.github.io/2016/01/07/javascript/"/>
    <id>http://buildlove.github.io/2016/01/07/javascript/</id>
    <published>2016-01-07T10:29:53.000Z</published>
    <updated>2016-10-13T09:21:35.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="null-与-undefined的区别"><a href="#null-与-undefined的区别" class="headerlink" title="null 与 undefined的区别"></a>null 与 undefined的区别</h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">var a;</div><div class="line">a    //undefined  已经声明但是未赋值的变量为undefined</div><div class="line"></div><div class="line">var a = null</div><div class="line">typeof(a)   //object  明确的赋值null</div><div class="line">a=&#123;&#125;</div><div class="line">alert(a==null) //false 当a有值&#123;&#125;时不为null</div><div class="line">typeof(null) //object</div></pre></td></tr></table></figure>
<h2 id="数组去重"><a href="#数组去重" class="headerlink" title="数组去重"></a>数组去重</h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">uniq = (a) -&gt;</div><div class="line">  hash = &#123;&#125;</div><div class="line">  len = a.length</div><div class="line">  result = []</div><div class="line">  i = 0</div><div class="line">  while i &lt; len</div><div class="line">    if !hash[a[i]]</div><div class="line">      hash[a[i]] = true</div><div class="line">      result.push a[i]</div><div class="line">    i++</div><div class="line">  return result</div></pre></td></tr></table></figure>
<p>#取两个数组的交集和差集<br><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">ArraySame = (arr1, arr2)-&gt;</div><div class="line">  count = -1</div><div class="line">  long = if arr1.length &lt; arr2.length then arr2 else arr1</div><div class="line">  short =if arr1.length &lt; arr2.length then arr1 else arr2</div><div class="line">  str = &apos;,&apos; + short.toString() + &apos;,&apos;</div><div class="line">  same = []</div><div class="line">  diff = []</div><div class="line">  for i of long</div><div class="line">    if str.indexOf(long[i]) &gt;= 0</div><div class="line">      same.push long[i]</div><div class="line">    else</div><div class="line">      diff.push long[i]</div><div class="line">  return [same, diff]</div></pre></td></tr></table></figure></p>
<h2 id="报错简写"><a href="#报错简写" class="headerlink" title="报错简写"></a>报错简写</h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">catchErr: (x)-&gt;</div><div class="line">  try</div><div class="line">    if typeof x is &apos;function&apos;</div><div class="line">      return x</div><div class="line">    else</div><div class="line">      throw &apos;it isnt a function&apos;</div><div class="line">  catch e</div><div class="line">    console.log e.message</div></pre></td></tr></table></figure>
<h2 id="杨辉三角"><a href="#杨辉三角" class="headerlink" title="杨辉三角"></a>杨辉三角</h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">Combination: (m,n)-&gt;</div><div class="line">  if n is 0</div><div class="line">    return 1</div><div class="line">  else if m is n</div><div class="line">    return 1</div><div class="line">  else</div><div class="line">    return Combination(m-1,n-1)+Combination(m-1,n);</div><div class="line"></div><div class="line">Pascal: (n)-&gt;</div><div class="line">  for i in n</div><div class="line">    arr = []</div><div class="line">    for j in i</div><div class="line">      arr.push Combination(i,j) + &quot; &quot;</div><div class="line">    arrstg = arr.toString().replace(/,/g, &apos;&apos;);</div><div class="line">    console.log arrstg</div></pre></td></tr></table></figure>
<h2 id="判断一个对象是否为空"><a href="#判断一个对象是否为空" class="headerlink" title="判断一个对象是否为空"></a>判断一个对象是否为空</h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">## 对象为空时不进行遍历</div><div class="line">  isobject = (obj)-&gt;</div><div class="line">    obj ?= &#123;&#125;</div><div class="line">    for name in obj</div><div class="line">      return false</div><div class="line">    return true</div><div class="line">  a = &#123;&#125;</div><div class="line">  isobject(a)</div></pre></td></tr></table></figure>
<h2 id="定时器"><a href="#定时器" class="headerlink" title="定时器"></a>定时器</h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">wait = ()-&gt;</div><div class="line">  x = 0</div><div class="line">  wait = setInterval ()-&gt;</div><div class="line">    x = x+1</div><div class="line">    console.log x</div><div class="line">    if x==y</div><div class="line">      clearInterval wait</div><div class="line">  ,1000</div><div class="line">wait(3)</div></pre></td></tr></table></figure>
<h2 id="删除遍历数组中的某个索引"><a href="#删除遍历数组中的某个索引" class="headerlink" title="删除遍历数组中的某个索引"></a>删除遍历数组中的某个索引</h2><figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">arr=[1,2,3,4,5,6,7];</div><div class="line">for(i=0;i &lt; arr.length;i++)</div><div class="line">  if arr[i]==5</div><div class="line">    arr.splice i,1</div><div class="line">    console.log arr[i]</div></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><div class="line">#promise 类</div><div class="line">dfd = new jQuery.Deferred()</div><div class="line">kwargs = &#123;&#125;</div><div class="line">class processes</div><div class="line">  sayncEvent: (kwargs, dfd)-&gt;</div><div class="line">    if kwargs.num &gt; 3</div><div class="line">      return dfd.resolve(&quot;sayncEvent: success&quot;)</div><div class="line">    else</div><div class="line">      return dfd.reject(&quot;sayncEvent: failed&quot;)</div><div class="line">    return dfd.promise()</div><div class="line">  testEvent: (kwargs, dfd)-&gt;</div><div class="line">    if kwargs = 5</div><div class="line">      return dfd.resolve(&quot;testEvent: The number is 5&quot;)</div><div class="line">    else</div><div class="line">      return dfd.reject(&quot;testEvent: The number is not 5&quot;)</div><div class="line">    return dfd.promise()</div><div class="line">  ## 数组去重</div><div class="line">  uniq: (kwargs, dfd)-&gt;</div><div class="line">    res = []</div><div class="line">    hash = &#123;&#125;</div><div class="line">    for key of kwargs.arr</div><div class="line">      if hash[key] isnt 1</div><div class="line">        res.push key</div><div class="line">        hash[key]=1</div><div class="line">    return res</div><div class="line"></div><div class="line">#检查promise类</div><div class="line">  check: (pro_val)-&gt;</div><div class="line">    $.when(pro_val).then(</div><div class="line">      (status)-&gt;</div><div class="line">        console.log(status)</div><div class="line">      (status)-&gt;</div><div class="line">        console.error(status)</div><div class="line">    )</div><div class="line">    return</div><div class="line"></div><div class="line">class descriptor</div><div class="line">  constructor: ()-&gt;</div><div class="line">    processes = new processes()</div><div class="line">  parseDfd: (pro_val_val)-&gt;</div><div class="line">    processes.check(pro_val_val)</div><div class="line"></div><div class="line">descriptor = new descriptor</div><div class="line">descriptor.parseDfd processes.sayncEvent(5, dfd)</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      用于个人笔记
    
    </summary>
    
      <category term="javascript" scheme="http://buildlove.github.io/categories/javascript/"/>
    
    
      <category term="js" scheme="http://buildlove.github.io/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>qiniu</title>
    <link href="http://buildlove.github.io/2015/12/24/qiniu/"/>
    <id>http://buildlove.github.io/2015/12/24/qiniu/</id>
    <published>2015-12-24T08:37:01.000Z</published>
    <updated>2016-10-13T09:22:23.000Z</updated>
    
    <content type="html"><![CDATA[<p>前期使用了qshell命令行工具进行上传<br><a href="https://github.com/qiniu/qshell" target="_blank" rel="external">https://github.com/qiniu/qshell</a></p>
<h4 id="同步"><a href="#同步" class="headerlink" title="同步"></a>同步</h4><p>以下是文件windows下七牛的配置文件qn.conf<br>{<br>    “src_dir”   :   “C:\Users\用户名\Desktop\文件夹”,   //这个是需要同步文件夹的地址<br>    “access_key”    :   “”,           //在这个地址获得<a href="https://portal.qiniu.com/setting/key" target="_blank" rel="external">https://portal.qiniu.com/setting/key</a><br>    “secret_key”    :   “”,           //在这个地址获得<a href="https://portal.qiniu.com/setting/key" target="_blank" rel="external">https://portal.qiniu.com/setting/key</a><br>    “up_host”       :   “<a href="http://up.qiniu.com" target="_blank" rel="external">http://up.qiniu.com</a>“,               //上传的地址<br>    “bucket”    :   “liyang”,                                //空间名<br>    “key_prefix”    :   “yilan/img/“,                        //上传之后文件前缀<br>    “ignore_dir”    :   false,<br>    “overwrite”     :   false,<br>    “check_exists”  :   false<br>}<br>qshell qupload qn.conf  同步上传本地所有文件</p>
]]></content>
    
    <summary type="html">
    
      七牛云存储js
    
    </summary>
    
      <category term="七牛" scheme="http://buildlove.github.io/categories/%E4%B8%83%E7%89%9B/"/>
    
    
      <category term="图床" scheme="http://buildlove.github.io/tags/%E5%9B%BE%E5%BA%8A/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu14.10遇到的问题</title>
    <link href="http://buildlove.github.io/2015/12/21/ubuntu/"/>
    <id>http://buildlove.github.io/2015/12/21/ubuntu/</id>
    <published>2015-12-21T08:57:01.000Z</published>
    <updated>2016-01-08T06:36:16.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="sudo-apt-get-update出现很多404"><a href="#sudo-apt-get-update出现很多404" class="headerlink" title="sudo apt-get update出现很多404"></a>sudo apt-get update出现很多404</h2><p>替换目录/etc/apt/sources.list中的源<br>网易163<br>deb <a href="http://mirrors.163.com/ubuntu/" target="_blank" rel="external">http://mirrors.163.com/ubuntu/</a> lucid main restricted universe multiverse<br>deb <a href="http://mirrors.163.com/ubuntu/" target="_blank" rel="external">http://mirrors.163.com/ubuntu/</a> lucid-security main restricted universe multiverse<br>deb <a href="http://mirrors.163.com/ubuntu/" target="_blank" rel="external">http://mirrors.163.com/ubuntu/</a> lucid-updates main restricted universe multiverse<br>deb <a href="http://mirrors.163.com/ubuntu/" target="_blank" rel="external">http://mirrors.163.com/ubuntu/</a> lucid-proposed main restricted universe multiverse<br>deb <a href="http://mirrors.163.com/ubuntu/" target="_blank" rel="external">http://mirrors.163.com/ubuntu/</a> lucid-backports main restricted universe multiverse<br>deb-src <a href="http://mirrors.163.com/ubuntu/" target="_blank" rel="external">http://mirrors.163.com/ubuntu/</a> lucid main restricted universe multiverse<br>deb-src <a href="http://mirrors.163.com/ubuntu/" target="_blank" rel="external">http://mirrors.163.com/ubuntu/</a> lucid-security main restricted universe multiverse<br>deb-src <a href="http://mirrors.163.com/ubuntu/" target="_blank" rel="external">http://mirrors.163.com/ubuntu/</a> lucid-updates main restricted universe multiverse<br>deb-src <a href="http://mirrors.163.com/ubuntu/" target="_blank" rel="external">http://mirrors.163.com/ubuntu/</a> lucid-proposed main restricted universe multiverse<br>deb-src <a href="http://mirrors.163.com/ubuntu/" target="_blank" rel="external">http://mirrors.163.com/ubuntu/</a> lucid-backports main restricted universe multiverse<br>或者搜狐更新服务器：<br>deb <a href="http://mirrors.sohu.com/ubuntu/" target="_blank" rel="external">http://mirrors.sohu.com/ubuntu/</a> lucid main restricted universe multiverse<br>deb <a href="http://mirrors.sohu.com/ubuntu/" target="_blank" rel="external">http://mirrors.sohu.com/ubuntu/</a> lucid-security main restricted universe multiverse<br>deb <a href="http://mirrors.sohu.com/ubuntu/" target="_blank" rel="external">http://mirrors.sohu.com/ubuntu/</a> lucid-updates main restricted universe multiverse<br>deb <a href="http://mirrors.sohu.com/ubuntu/" target="_blank" rel="external">http://mirrors.sohu.com/ubuntu/</a> lucid-proposed main restricted universe multiverse<br>deb <a href="http://mirrors.sohu.com/ubuntu/" target="_blank" rel="external">http://mirrors.sohu.com/ubuntu/</a> lucid-backports main restricted universe multiverse<br>deb-src <a href="http://mirrors.sohu.com/ubuntu/" target="_blank" rel="external">http://mirrors.sohu.com/ubuntu/</a> lucid main restricted universe multiverse<br>deb-src <a href="http://mirrors.sohu.com/ubuntu/" target="_blank" rel="external">http://mirrors.sohu.com/ubuntu/</a> lucid-security main restricted universe multiverse<br>deb-src <a href="http://mirrors.sohu.com/ubuntu/" target="_blank" rel="external">http://mirrors.sohu.com/ubuntu/</a> lucid-updates main restricted universe multiverse<br>deb-src <a href="http://mirrors.sohu.com/ubuntu/" target="_blank" rel="external">http://mirrors.sohu.com/ubuntu/</a> lucid-proposed main restricted universe multiverse<br>deb-src <a href="http://mirrors.sohu.com/ubuntu/" target="_blank" rel="external">http://mirrors.sohu.com/ubuntu/</a> lucid-backports main restricted universe multiverse</p>
<h2 id="无法修正错误-因为您要求某些软件包保持现状-就是它们破坏了软件包间的依赖关系"><a href="#无法修正错误-因为您要求某些软件包保持现状-就是它们破坏了软件包间的依赖关系" class="headerlink" title="无法修正错误,因为您要求某些软件包保持现状,就是它们破坏了软件包间的依赖关系"></a>无法修正错误,因为您要求某些软件包保持现状,就是它们破坏了软件包间的依赖关系</h2><p>系统设置&gt;软件和更新&gt;其它软件最下面一列的源勾去掉(出现这个错误都是源和环境依赖的问题百度解决)</p>
<h2 id="chrome无法下载"><a href="#chrome无法下载" class="headerlink" title="chrome无法下载"></a>chrome无法下载</h2><p>在ubuntu软件下载中心下载google-chrome</p>
<h2 id="QQ无法下载"><a href="#QQ无法下载" class="headerlink" title="QQ无法下载"></a>QQ无法下载</h2><p>目前知道的只能下载国际版的QQ，或者网页QQ</p>
<h2 id="没办法设置代理-主要是为了第一次登陆chrome账号同步书签和扩展"><a href="#没办法设置代理-主要是为了第一次登陆chrome账号同步书签和扩展" class="headerlink" title="没办法设置代理(主要是为了第一次登陆chrome账号同步书签和扩展)"></a>没办法设置代理(主要是为了第一次登陆chrome账号同步书签和扩展)</h2><p>在github上面下载switchysharp压缩包并解压（<a href="https://github.com/FelisCatus/switchysharp）" target="_blank" rel="external">https://github.com/FelisCatus/switchysharp）</a><br>chrome输入chrome://extensions/（或进入 设置-&gt;扩展程序）<br>勾上开发者模式选项-&gt; 点击加载已解压的扩展程序<br>安装上之后会切换到switchysharp设置项<br>http直接填入ip和端口号<br>socks选中socks v5或v4选项 设置好后保存<br>点击如图所示的小地球选择刚刚设置的代理<br><img src="http://7viklp.com1.z0.glb.clouddn.com/yilan/img/blog/ubuntu/proxyset.png" alt="uiset"><br>直接www.google.com已经能打开了 （登陆google邮箱账户，同步扩展和书签）</p>
<h2 id="Sublime-Text-3的下载安装"><a href="#Sublime-Text-3的下载安装" class="headerlink" title="Sublime Text 3的下载安装"></a>Sublime Text 3的下载安装</h2><p><a href="http://www.sublimetext.com/3下载64位（系统位64位）的.deb安装包" target="_blank" rel="external">http://www.sublimetext.com/3下载64位（系统位64位）的.deb安装包</a><br>(<a href="http://c758482.r82.cf2.rackcdn.com/sublime-text_build-3059_amd64.deb），下载后双击安装。安装好之后，通过命令subl即可打开程序，" target="_blank" rel="external">http://c758482.r82.cf2.rackcdn.com/sublime-text_build-3059_amd64.deb），下载后双击安装。安装好之后，通过命令subl即可打开程序，</a><br>快键键参考：<a href="http://blog.csdn.net/cywosp/article/details/31791881" target="_blank" rel="external">http://blog.csdn.net/cywosp/article/details/31791881</a><br>插件安装的默认目录：.config/sublime-text-3/Package(把配置好的插件剪切合并到这里就OK)</p>
<h2 id="ubuntu-apt-get-update失败"><a href="#ubuntu-apt-get-update失败" class="headerlink" title="ubuntu apt-get update失败"></a>ubuntu apt-get update失败</h2><p>出现错误：E:Could not get lock /var/lib/apt/lists/lock - open (11: Resource temporarily unavailable)<br>出现这个问题的原因可能是有另外一个程序正在运行，导致资源被锁不可用。而导致资源被锁的原因，可能是上次安装时没正常完成，而导致出现此状况。<br>解决方法：把 /var/lib/apt/lists 中的文件全部删掉<br>输入以下命令<br>sudo rm /var/cache/apt/archives/lock<br>sudo rm /var/lib/dpkg/lock</p>
<h2 id="chrome字体替换"><a href="#chrome字体替换" class="headerlink" title="chrome字体替换"></a>chrome字体替换</h2><p>ubuntu字体目录 /usr/share/fonts<br>windows字体目录 C://Windows/Fonts<br>cd /usr/share/fonts<br>sudo mkdir yahei<br>sudo chmod 755 yahei<br>把windows字体复制粘贴到ubuntu（复制粘贴后名称可能不同，正常情况）<br>chrome-&gt;设置（高级设置）-&gt;网页内容（自定义）点开就能换成要的字体</p>
]]></content>
    
    <summary type="html">
    
      ubuntu安装出现的问题（问题部分出自虚拟机内的ubuntu）
    
    </summary>
    
      <category term="linux" scheme="http://buildlove.github.io/categories/linux/"/>
    
    
      <category term="linux" scheme="http://buildlove.github.io/tags/linux/"/>
    
      <category term="ubuntu" scheme="http://buildlove.github.io/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>Git常用命令</title>
    <link href="http://buildlove.github.io/2015/12/08/Git/"/>
    <id>http://buildlove.github.io/2015/12/08/Git/</id>
    <published>2015-12-08T08:26:08.000Z</published>
    <updated>2016-10-13T09:42:44.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="设置常用别名"><a href="#设置常用别名" class="headerlink" title="设置常用别名"></a>设置常用别名</h2><p>git config <code>--</code>global alias.co checkout<br>git config <code>--</code>global alias.ci commit<br>git config <code>--</code>global alias.br branch<br>git config <code>--</code>global alias.unstage ‘reset HEAD’<br>git config <code>--</code>global alias.last ‘log -1’<br>git config <code>--</code>global alias.lg “log –color –graph –pretty=format:’%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)&lt;%an&gt;%Creset’ –abbrev-commit”</p>
<h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><p>git status 查看本地文件状态<br>git add 加入暂存区<br>git commit -m “why commit” 提交到仓库<br>git pull origin master 从远程仓库获取最新版本（解决冲突）<br>git push origin master 推送本地修改到远程仓库<br>git tag v1.0.1 给本地修改仓库打上tag（这个每次大的提交都非常有必要打包）<br>git push origin v1.0.1 推送本地修改版本到远程仓库<br>git reflog 打印你的每一次命令（用于版本回退非常牛）<br>git reset <code>--</code>hard HEAD^ 回退到上一版本（后面换成HEAD^100 回退到上100个版本）<br>git reset <code>--</code>hard 版本ID 回退到想要的版本</p>
<h2 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h2><p>echo “A article” &gt;&gt; readme.txt                                        在readme.txt中新添加一行<br>echo “LICENSE is a new file.” &gt; LICENSE                               新增一个文件<br>cat readme.txt                                                        查看文件<br>rm readme.txt（如果删除错了文件可用 git checkout – readme.txt恢复）       删除文件</p>
<h2 id="对暂存区和工作区的操作"><a href="#对暂存区和工作区的操作" class="headerlink" title="对暂存区和工作区的操作"></a>对暂存区和工作区的操作</h2><p>git co – readme.txt（别名） 丢弃工作区的修改<br>git unstage(别名)                丢弃暂存区的修改</p>
<h2 id="远程仓库"><a href="#远程仓库" class="headerlink" title="远程仓库"></a>远程仓库</h2><p>git push origin :dev    删除远程dev分支<br>git push origin dev:dev 提交本地dev分支为远程dev分支（创建远程分支并合并本地分支到远程分支）</p>
<h2 id="解决冲突"><a href="#解决冲突" class="headerlink" title="解决冲突"></a>解决冲突</h2><p>git checkout master         切换到master分支<br>git merge dev               merge 哎呀冲突了<br>git log                     这时候打开master中冲突文件，删掉冲突的代码<br>git add -A                  重新加入暂存<br>git commit -m ‘修改的代码’    重新提交<br>git push origin master      推送到远程仓库</p>
<h2 id="公钥和私钥存在于当前目录下的-ssh目录id-rsa-和-id-rsa-pub"><a href="#公钥和私钥存在于当前目录下的-ssh目录id-rsa-和-id-rsa-pub" class="headerlink" title="公钥和私钥存在于当前目录下的.ssh目录id_rsa 和 id_rsa.pub"></a>公钥和私钥存在于当前目录下的.ssh目录id_rsa 和 id_rsa.pub</h2><p>ssh-keygen -t rsa -C “youremail@example.com”                      创建SSH Key 然后一路回车（登陆Github传上去）<br>git remote add origin git@github.com:buildlove/learngit.git       关联远程仓库<br>git push -u origin master                                         推送本地提交到远程master仓库（第一次提交需要加-u）<br>git clone git@github.com:buildlove/learngit.git                   克隆一个远程仓库到本地<br>git pull origin master                                            从远程仓库拉下代码如果有冲突，本地手动解决</p>
<h2 id="删除远程文件"><a href="#删除远程文件" class="headerlink" title="删除远程文件"></a>删除远程文件</h2><p>git rm -r -n <code>--</code>cached  <em>/node_module/\</em>    加上-n这个参数，执行命令时，是不会删除任何文件，要预览删除的文件列表。<br>git rm -r -f <code>--</code>cached <em>/node_module/\</em>      删除跟踪状态<br>git rm <em>/node_module/\</em> -r -f               删除文件<br>git commit -m “移除src目录下所有文件的版本控制”  提交<br>git push origin master                      提交到远程服务器</p>
<h2 id="分支管理"><a href="#分支管理" class="headerlink" title="分支管理"></a>分支管理</h2><p>git branch                查看所有分支<br>git branch dev            创建分支<br>git co -b dev (别名)      创建一个dev分支并切换到dev分支<br>git co                    切换分支<br>git merge <code>--</code>no-ff branch-B 可以将某一分支branch-B合并到分支branch-A并将合并记录提交到历史记录中去,但在合并前必须先切换到分支branch-A。<br>git branch -d dev         删除dev分支</p>
<h2 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h2><p>git tag                                查看所有本地tag标签<br>git tag v1.0                           给最新提交的commit打上v1.0标签<br>git tag -d v0.1                        删除标签<br>git tag v0.9 6224937                   给id=6224937打上标签 v0.9<br>git tag -a v0.1 -m “理由” 6224937      打上标签加上原因<br>git show v0.1                          查看v0.1说明文字<br>git push origin v1.0                   推送标签到远程<br>git push origin :refs/tags/v0.9        删除远程标签<br>git log <code>--</code>pretty=oneline <code>--</code>abbrev-commit查看标签绑定的提交</p>
<h2 id="自定义git"><a href="#自定义git" class="headerlink" title="自定义git"></a>自定义git</h2><p>git config <code>--</code>global color.ui true                 配置颜色<br>.gitignore    <a href="https://github.com/github/gitignore" target="_blank" rel="external">https://github.com/github/gitignore</a> 忽略文档<br>git config <code>--</code>global alias.st status               设置别名格式<br>cat .git/config                                   查看git配置（要删除别名 找到alias之后的别名删除即可）</p>
<h2 id="修改项目根目录下-git-config配置文件"><a href="#修改项目根目录下-git-config配置文件" class="headerlink" title="修改项目根目录下.git/config配置文件"></a>修改项目根目录下.git/config配置文件</h2><p>也能找到全局目录下的git配置文件直接配置</p>
<p>git init 在目录下配置.git文件<br>[core]<br>  repositoryformatversion = 0 版本库格式<br>  filemode = false<br>  bare = false<br>  logallrefupdates = true<br>  symlinks = false<br>  ignorecase = true<br>  hideDotFiles = dotGitOnly<br>[remote “origin”]<br>  url = <a href="https://github.com/git/git.git" target="_blank" rel="external">https://github.com/git/git.git</a>  这个为自己的git仓库url<br>  fetch = +refs/heads/<em>:refs/remotes/origin/</em><br>[branch “master”]<br>  remote = origin           git分支<br>  merge = refs/heads/master<br>[user]                      用户自己的个人信息<br>  email = mkdir_yang@163.com<br>  name = buildlove<br>[gui]<br>  wmstate = normal<br>  geometry = 799x475+200+200 159 214<br>[alias]                      设置的别名,一般别名都设置成全局的<br>  co = checkout</p>
]]></content>
    
    <summary type="html">
    
      仅用于个人笔记
    
    </summary>
    
      <category term="分布式版本管理工具" scheme="http://buildlove.github.io/categories/%E5%88%86%E5%B8%83%E5%BC%8F%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="分布式版本管理工具" scheme="http://buildlove.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F%E7%89%88%E6%9C%AC%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>photoshop</title>
    <link href="http://buildlove.github.io/2015/11/08/photoshop/"/>
    <id>http://buildlove.github.io/2015/11/08/photoshop/</id>
    <published>2015-11-08T02:20:08.000Z</published>
    <updated>2016-10-13T09:49:10.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p><a href="http://www.imooc.com/learn/506" target="_blank" rel="external">参考视频链接</a>： <a href="http://www.imooc.com/learn/506" target="_blank" rel="external">http://www.imooc.com/learn/506</a></p>
</blockquote>
<h2 id="界面设置"><a href="#界面设置" class="headerlink" title="界面设置"></a>界面设置</h2><p>视图-&gt;标尺（打开）<br>视图-&gt;显示-&gt;智能参考线（打开）<br>自动选择：图层<br>窗口中只勾选 信息 字符 图层 历史记录<br>信息面板设置：第一第二颜色都设置为RGB 标尺设置为像素 勾选文档大小和文档尺寸<br>编辑-&gt;首选项-&gt;单位与标尺 标尺：像素 文字：像素<br>ctrl + 鼠标点击 能看到图层的 大小 像素 字符信息就行</p>
<p><img src="http://7viklp.com1.z0.glb.clouddn.com/yilan/img/blog/photoshop/ui-set.png" alt="uiset"></p>
<h2 id="简单工具操作"><a href="#简单工具操作" class="headerlink" title="简单工具操作"></a>简单工具操作</h2><p><img src="http://7viklp.com1.z0.glb.clouddn.com/yilan/img/blog/photoshop/choose-space.png" alt="uiset"><br><strong>选框工具的使用</strong></p>
<ol>
<li>新选区</li>
<li>添加到选区</li>
<li>从选区中减去4与选区交叉<br>椭圆选框：用shift + 鼠标 可以画圆（先放鼠标 再放shift）</li>
</ol>
<h2 id="套索工具"><a href="#套索工具" class="headerlink" title="套索工具"></a>套索工具</h2><ol>
<li>套索工具（快捷键shift alt 或shift+alt选择加减乘区域 alt按住后可移动选中的区域）</li>
<li>多边形套索工具（最后双击会闭合区域）</li>
<li>磁性套索工具</li>
</ol>
<h2 id="快速选择工具"><a href="#快速选择工具" class="headerlink" title="快速选择工具"></a>快速选择工具</h2><ol>
<li>快速选择工具（同上位置：有加有减,可以调节大小）</li>
<li>魔棒（快速选择小区域，按住shift可多次选择）<blockquote>
<p>以上三种工具都是选区工具，选区之后在所选区域右键将有更多操作</p>
</blockquote>
</li>
</ol>
<h2 id="裁剪工具"><a href="#裁剪工具" class="headerlink" title="裁剪工具"></a>裁剪工具</h2><ol>
<li>裁剪工具（enter键确定所选部分）（选区工具选区之后按裁剪工具会自动识别裁剪最小的等边图形）<br><em>按住alt点击图层前面的眼睛，图片会变成该图层的剪影模式</em></li>
<li>透视裁剪工具</li>
<li>切片工具</li>
<li>切片选择工具</li>
</ol>
<h2 id="吸管"><a href="#吸管" class="headerlink" title="吸管"></a>吸管</h2><p>选择点的颜色</p>
<h2 id="污点修复工具"><a href="#污点修复工具" class="headerlink" title="污点修复工具"></a>污点修复工具</h2><ol>
<li>污点修复画笔工具（自动修复成和背景一样的颜色）</li>
<li>修复画笔工具（alt+鼠标选中， 放开alt键 在其它地方可以把选中的复制一遍，放开鼠标会有羽化）</li>
<li>修补工具（选择一块区域，拖动该区域，用拖动到的区域颜色来替补选择的区域）</li>
<li>内容感知移动工具</li>
<li>红眼工具</li>
</ol>
<h2 id="画笔工具"><a href="#画笔工具" class="headerlink" title="画笔工具"></a>画笔工具</h2><ol>
<li>画笔工具（属性栏： 选择区域和边缘硬度）</li>
<li>铅笔工具（就是细点）</li>
</ol>
<h2 id="仿制图章"><a href="#仿制图章" class="headerlink" title="仿制图章"></a>仿制图章</h2><ol>
<li>仿制图章工具（可以仿制出一样的图案alt+鼠标左键选中 松开鼠标左键在空白位置复制一个图片）</li>
<li>图案图章工具（工具栏选择图片可以绘制出来）</li>
</ol>
<h2 id="历史画笔工具"><a href="#历史画笔工具" class="headerlink" title="历史画笔工具"></a>历史画笔工具</h2><ol>
<li>历史记录画笔工具（滤镜-&gt;模糊-&gt;高斯模糊）【马赛克】</li>
<li>历史记录艺术画笔工具</li>
</ol>
<h2 id="橡皮檫工具"><a href="#橡皮檫工具" class="headerlink" title="橡皮檫工具"></a>橡皮檫工具</h2><ol>
<li>橡皮擦工具</li>
<li>背景橡皮擦工具（擦背景）</li>
<li>魔术橡皮擦（擦区域）</li>
</ol>
<h2 id="渐变工具"><a href="#渐变工具" class="headerlink" title="渐变工具"></a>渐变工具</h2><ol>
<li>渐变工具（工具区选择图形，拉出渐变图形）</li>
<li>油漆桶工具</li>
<li>3D材料拖放工具</li>
</ol>
<h2 id="模糊工具"><a href="#模糊工具" class="headerlink" title="模糊工具"></a>模糊工具</h2><ol>
<li>模糊工具</li>
<li>锐化工具</li>
<li>涂抹工具（眼睫毛太短，直接涂抹长）</li>
</ol>
<h2 id="减淡工具"><a href="#减淡工具" class="headerlink" title="减淡工具"></a>减淡工具</h2><ol>
<li>减淡工具</li>
<li>加深工具</li>
<li>海绵工具</li>
</ol>
<h2 id="钢笔工具"><a href="#钢笔工具" class="headerlink" title="钢笔工具"></a>钢笔工具</h2><ol>
<li>钢笔工具</li>
<li>自由钢笔工具</li>
<li>添加描点工具</li>
<li>删除描点工具</li>
<li>转换点工具</li>
</ol>
<h2 id="文字工具"><a href="#文字工具" class="headerlink" title="文字工具"></a>文字工具</h2><ol>
<li>横排文字工具（工具栏调节颜色）</li>
<li>直排文字工具</li>
</ol>
<h2 id="前景色和背景色-用x快捷键替换"><a href="#前景色和背景色-用x快捷键替换" class="headerlink" title="前景色和背景色(用x快捷键替换)"></a>前景色和背景色(用x快捷键替换)</h2><p><strong>其他工具（<strong>**</strong>）</strong></p>
<h2 id="图层原理以及操作"><a href="#图层原理以及操作" class="headerlink" title="图层原理以及操作"></a>图层原理以及操作</h2><p>制作一个6图层五环圈在一起<br><img src="http://7viklp.com1.z0.glb.clouddn.com/yilan/img/blog/photoshop/five-circle.png" alt="uiset"></p>
<h2 id="参考线及其辅助"><a href="#参考线及其辅助" class="headerlink" title="参考线及其辅助"></a>参考线及其辅助</h2><p>视图-&gt;新建参考线（ctrl+r）从边缘拉出参考线 按住Alt可变方向<br><strong>按住alt + v + e可直接弹出参考线选项（alt+字母可对菜单栏操作）</strong><br><strong>ctrl + 分号 隐藏参考线</strong></p>
<h2 id="传统切图"><a href="#传统切图" class="headerlink" title="传统切图"></a>传统切图</h2><p><strong>切图与切片</strong><br>切图与切片的基本概念和区别</p>
<p><strong>切片的基本操作及其技巧</strong><br>介绍切片工具及其基本操作<br>介绍切片时候的一些技巧</p>
<p><strong>导出操作</strong><br>存储为Web所用格式<br>alt + shift + ctrl + s 用来把切片分别存储</p>
<h2 id="精准切图"><a href="#精准切图" class="headerlink" title="精准切图"></a>精准切图</h2><p><strong>改进切图流程</strong><br>介绍如何利用Photoshop的脚本，进行一种更加快捷精准的切图方法<br>文件-&gt;脚本-&gt;将图层导出到文件 勾上透明区域 勾上裁切图层</p>
<p>自动化切图，省时省力<br>计算机自动计算，尺寸更精确</p>
<p>总结 认识基本工具</p>
<h2 id="功能点"><a href="#功能点" class="headerlink" title="功能点"></a>功能点</h2><h2 id="动作（对大量图片进行统一处理）"><a href="#动作（对大量图片进行统一处理）" class="headerlink" title="动作（对大量图片进行统一处理）"></a>动作（对大量图片进行统一处理）</h2><p>窗口 -&gt; 动作面板<br>动作面板下面的菜单栏新建动作（给动作取名）<br>录制动作 完成之后可设置快捷键<br>文件-&gt;自动-&gt;批处理<br>可设置对一个文件夹内所有文件进行指定动作</p>
<p>选中一块区域ctrl + T拖动边界线，复制</p>
]]></content>
    
    <summary type="html">
    
      仅用于个人笔记
    
    </summary>
    
      <category term="绘图" scheme="http://buildlove.github.io/categories/%E7%BB%98%E5%9B%BE/"/>
    
    
      <category term="ps" scheme="http://buildlove.github.io/tags/ps/"/>
    
      <category term="photo" scheme="http://buildlove.github.io/tags/photo/"/>
    
  </entry>
  
</feed>
